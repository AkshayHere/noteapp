version: '3.8'

services:
  db:
    image: postgres:13-alpine
    container_name: notes_db
    environment:
      POSTGRES_DB: notes_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432" # Expose DB port for local development/debugging (optional)
    volumes:
      - db_data:/var/lib/postgresql/data # Persistent data volume
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql # Uncomment to run initial SQL
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d notes_db"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: notes_backend
    ports:
      - "5000:5000"
    environment:
      DB_USER: user
      DB_HOST: db                  # Service name for the database
      DB_DATABASE: notes_db
      DB_PASSWORD: password
      DB_PORT: 5432
      PORT: 5000
    depends_on:
      db:
        condition: service_healthy # Ensure DB is ready before starting backend
    restart: always

  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        # Pass the backend API URL as a build arg to the React app
        REACT_APP_API_URL: http://localhost:5000/api/notes
    container_name: notes_frontend
    ports:
      - "3000:80" # Map host port REACT_PORT to container's port 80 (Nginx default)
    depends_on:
      - backend # Frontend depends on backend for API calls
    restart: always

volumes:
  db_data: # Define the named volume for database persistence
